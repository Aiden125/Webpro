-- [VIII] SEQUENCE : 순차번호 생성기, 인위적인 PK 사용 용도
DROP SEQUENCE FRIEND_SEQ; --시퀀스 삭제하기(있는지 없는지 모르기에 일단 삭제)
CREATE SEQUENCE FRIEND_SEQ
    START WITH 1 -- 1번 부터 시퀀스 시작하기.
    INCREMENT BY 1 -- 1씩 커지게 하기
    MAXVALUE 9999 -- 최대 몇까지 커질 수 있게할지 조건
    MINVALUE 1 -- 최소 조건
    NOCACHE -- 컴퓨터를 껐다 켜도 초기화되지않게.
    NOCYCLE; -- 최대인 9999까지 가면 에러를 발생 시킴. 만약 선언 안하면 다시 1로 돌아가서 반복
    
CREATE SEQUENCE FRIEND_SEQ2 -- 위에와 똑같음. 생략 가능한거 다 뺀 것
    MAXVALUE 9999 -- 최대 몇까지 커질 수 있게할지 조건
    NOCACHE
    NOCYCLE;

SELECT FRIEND_SEQ.NEXTVAL FROM DUAL;
DROP SEQUENCE FRIEND_SEQ;
CREATE SEQUENCE FRIEND_SEQ
    MAXVALUE 9999
    NOCACHE
    NOCYCLE;
DROP TABLE FRIEND;
CREATE TABLE FRIEND(
    NUM NUMBER(4) PRIMARY KEY, --시퀀스 이용
    NAME VARCHAR2(30) NOT NULL,
    TEL VARCHAR2(30) UNIQUE, -- NULL허용, 유일한 갓
    ADDRESS VARCHAR2(300),
    LAST_MODIFYED DATE DEFAULT SYSDATE);

INSERT INTO FRIEND(NUM, NAME, TEL, ADDRESS)
    VALUES(FRIEND_SEQ.NEXTVAL, '마길둑',  NULL, '서울시 용산구');
    
INSERT INTO FRIEND (NUM, NAME, TEL, ADDRESS)
    VALUES(FRIEND_SEQ.NEXTVAL, '횡골동', NULL, '서울시 강남구');
-- [VIII] SEQUENCE : 순차번호 생성기, 인위적인 PK 사용 용도
DROP SEQUENCE FRIEND_SEQ; --시퀀스 삭제하기(있는지 없는지 모르기에 일단 삭제)
CREATE SEQUENCE FRIEND_SEQ
    START WITH 1 -- 1번 부터 시퀀스 시작하기.
    INCREMENT BY 1 -- 1씩 커지게 하기
    MAXVALUE 9999 -- 최대 몇까지 커질 수 있게할지 조건
    MINVALUE 1 -- 최소 조건
    NOCACHE -- 컴퓨터를 껐다 켜도 초기화되지않게.
    NOCYCLE; -- 최대인 9999까지 가면 에러를 발생 시킴. 만약 선언 안하면 다시 1로 돌아가서 반복
    
CREATE SEQUENCE FRIEND_SEQ2 -- 위에와 똑같음. 생략 가능한거 다 뺀 것
    MAXVALUE 9999 -- 최대 몇까지 커질 수 있게할지 조건
    NOCACHE
    NOCYCLE;

SELECT FRIEND_SEQ.NEXTVAL FROM DUAL;
DROP SEQUENCE FRIEND_SEQ;
CREATE SEQUENCE FRIEND_SEQ
    MAXVALUE 9999
    NOCACHE
    NOCYCLE;
DROP TABLE FRIEND;
CREATE TABLE FRIEND(
    NUM NUMBER(4) PRIMARY KEY, --시퀀스 이용
    NAME VARCHAR2(30) NOT NULL,
    TEL VARCHAR2(30) UNIQUE, -- NULL허용, 유일한 값
    ADDRESS VARCHAR2(300),
    LAST_MODIFYED DATE DEFAULT SYSDATE);

INSERT INTO FRIEND (NUM, NAME, TEL, ADDRESS)
    VALUES(FRIEND_SEQ.NEXTVAL, '횡골동', NULL, '서울시 강남구');
SELECT * FROM FRIEND;
INSERT INTO FRIEND (NUM, NAME, TEL, ADDRESS)
    VALUES (FRIEND_SEQ.NEXTVAL, '신길동', '010-2222-3333','서울시 영등포구');
INSERT INTO FRIEND (NUM, NAME, TEL, ADDRESS)
    VALUES (FRIEND_SEQ.NEXTVAL, '신길동', '010-2222-3333','서울시 영등포구');
SELECT * FROM FRIEND;

SELECT FRIEND_SEQ.CURRVAL FROM DUAL; -- 현재 시퀀스 값
COMMIT;


-- EX. 초기값 101부터 최대값 999,999까지 1씩 증가하는 TEST_SEQ 시퀀스를 생성
CREATE SEQUENCE TEST_SEQ START WITH 101 MAXVALUE 999999 NOCACHE;
SELECT TEST_SEQ.CURRVAL FROM DUAL; -- 시퀀스의 현재 값이 없어서 에러
SELECT TEST_SEQ.NEXTVAL FROM DUAL;





-- 연습문제 PDF4장
DROP TABLE BOOKCATEGORY;
DROP TABLE BOOK;

CREATE TABLE BOOKCATEGORY (
    CATEGORY_CODE VARCHAR2(10) PRIMARY KEY,
    CATEGORY_NAME VARCHAR2(50) UNIQUE,
    OFFICE_LOC VARCHAR2(50) NOT NULL);

INSERT INTO BOOKCATEGORY VALUES(100, '철학', '3층 인문실');
INSERT INTO BOOKCATEGORY VALUES(200, '인문', '3층 인문실');
INSERT INTO BOOKCATEGORY VALUES(300, '자연과학', '4층 과학실');
INSERT INTO BOOKCATEGORY VALUES(400, 'IT', '4층 과학실');
SELECT * FROM BOOKCATEGORY;

CREATE TABLE BOOK (
    BOOKNO VARCHAR2(10) PRIMARY KEY, 
    CATEGORY_CODE VARCHAR2(10) REFERENCES BOOKCATEGORY(CATEGORY_CODE),
    BOOKNAME VARCHAR(50),
    PUBLISHER VARCHAR(50),
    PUBYEAR NUMBER(4) DEFAULT TO_NUMBER(TO_CHAR(SYSDATE, 'YYYY')));

--아래처럼 디폴트 값으로 넣기위해서는 컬럼 명시를 반드시 해줘야함
INSERT INTO BOOK (BOOKNO, CATEGORY_CODE, BOOKNAME, PUBLISHER)
VALUES('100A01', 100, '철학자의 삶', '더존출판');
INSERT INTO BOOK (BOOKNO, CATEGORY_CODE, BOOKNAME, PUBLISHER)
VALUES('400A01', 400, '이것이 DB다', '더존출판');
SELECT * FROM BOOK;

SELECT * FROM BOOKCATEGORY;
SELECT * FROM BOOK;




-- 연습문제 PDF5장
DROP TABLE STUDENT;
DROP TABLE MAJOR;
DROP SEQUENCE MAJOR_SEQ;

CREATE TABLE MAJOR(
    MAJOR_CODE NUMBER(4) PRIMARY KEY,
    MAJOR_NAME VARCHAR2(30) UNIQUE,
    MAJOR_OFFICE_LOC VARCHAR2(30) NOT NULL);

INSERT INTO MAJOR VALUES(MAJOR_SEQ.NEXTVAL, '경영정보', '경영관 305호');
INSERT INTO MAJOR VALUES(MAJOR_SEQ.NEXTVAL, '소프트웨어공학', '정보관 808호');
INSERT INTO MAJOR VALUES(MAJOR_SEQ.NEXTVAL, '디자인', '예술관 606호');
INSERT INTO MAJOR VALUES(MAJOR_SEQ.NEXTVAL, '경제', '경상관 202호');

SELECT * FROM MAJOR;

CREATE TABLE STUDENT(
    STUDENT_CODE VARCHAR(20) PRIMARY KEY,
    MAJOR_CODE NUMBER(4) REFERENCES MAJOR(MAJOR_CODE),
    STUDENT_NAME VARCHAR(20) NOT NULL,
    SCORE NUMBER(3) CHECK(0<=SCORE AND SCORE<=100));

INSERT INTO STUDENT (STUDENT_CODE, STUDENT_NAME, SCORE, MAJOR_CODE)
VALUES ('A01', '김길동', 100, 1);
INSERT INTO STUDENT (STUDENT_CODE, STUDENT_NAME, SCORE, MAJOR_CODE)
VALUES ('A02', '문길동', 90, 2);
INSERT INTO STUDENT (STUDENT_CODE, STUDENT_NAME, SCORE, MAJOR_CODE)
VALUES ('A03', '홍길동', 95, 1);
SELECT * FROM STUDENT;






-- 총 연습문제1(8page 문제)
--다음과 같은 구조의 테이블을 생성하고 데이터를 입력하는 SQL문을 조건에 맞게 작성하여
--ex1.sql파일과 실행 캡처파일(ex1.jpg나 ex1.png)을 제출하시오.
--[요구사항]
--(1) 같은 이름의 테이블이나 시퀀스가 있을 수 있으니 먼저 삭제하고 테이블을 생성하시오
DROP TABLE MEMBER;
DROP TABLE MEMBER_LEVEL;
DROP SEQUENCE MEMBER_MNO_SQ;
--(2) MEMBER 테이블은 필드 별로 다음의 조건을 지켜 생성하시오.
--	① mNO(번호) : 주키
--	② mNAME(이름) : NULL값을 입력할 수 없다
--	③ mPW(비밀번호) : 반드시 1~8글자 이내의 문자를 입력한다
--	④ mEMAIL(메일) : 모든 데이터는 EMAIL 필드값이 모두 다르게 입력된다.
--	⑤ mPOINT(포인트) : 0이상의 값만 입력할 수 있다.
--	⑥ mRDATE(가입일) : 입력하지 않을 시, 기본적으로 현재날짜로 입력된다.
--  ⑦ LEVELNO : MEMBER_LEVEL 테이블의 LEVELNO 필드를 참조하는 외래키
CREATE TABLE MEMBER(
    mNO NUMBER(4) PRIMARY KEY,
    mNAME VARCHAR2(20) NOT NULL,
    mPW VARCHAR2(8) CHECK (LENGTH(mPW)>=1),
    mEMAIL VARCHAR2(20) UNIQUE,
    mPOINT NUMBER(8) CHECK (mPOINT>=0),
    mRDATE DATE DEFAULT SYSDATE,
    LEVELNO NUMBER(3) REFERENCES MEMBER_LEVEL(LEVELNO));
    

--(3) MEMBER_LEVEL 테이블은 필드 별로 다음의 제약조건을 지킨다.
--	① LEVELNO : 주키
--	② LEVELNAME : NULL값을 입력할 수 없다	
CREATE TABLE MEMBER_LEVEL(
    LEVELNO NUMBER(3) PRIMARY KEY,
    LEVELNAME VARCHAR2(20) NOT NULL);
    
--(4) MEMBER 테이블의 mNO번호는 시퀀스(MEMBER_MNO_SQ)를 생성한 뒤 자동생성 번호로 입력
CREATE SEQUENCE MEMBER_MNO_SQ
    START WITH 1 -- 1번 부터 시퀀스 시작하기.
    INCREMENT BY 1 -- 1씩 커지게 하기
    MAXVALUE 9999 -- 최대 몇까지 커질 수 있게할지 조건
    MINVALUE 1 -- 최소 조건
    NOCACHE -- 컴퓨터를 껐다 켜도 초기화 되지 않게.
    NOCYCLE; -- 최대인 9999까지 가면 에러를 발생 시킴. 만약 선언 안하면 다시 1로 돌아가서 반복

INSERT INTO MEMBER_LEVEL VALUES (-1, 'BLACK');
INSERT INTO MEMBER_LEVEL VALUES (0, '일반');
INSERT INTO MEMBER_LEVEL VALUES (1, '실버');
INSERT INTO MEMBER_LEVEL VALUES (2, '골드');
SELECT * FROM MEMBER_LEVEL;

INSERT INTO MEMBER (mNO, mNAME, mPW, mEMAIL, mPOINT, mRDATE, LEVELNO)
VALUES (MEMBER_MNO_SQ.NEXTVAL, '홍길동', 'aa', 'hong@hong.com', 0, '22/03/10', 0);
INSERT INTO MEMBER (mNO, mNAME, mPW, mEMAIL, mPOINT, mRDATE, LEVELNO)
VALUES (MEMBER_MNO_SQ.NEXTVAL, '신길동', 'bb', 'sin@sin.com', 1000, '22/04/01', 1);
SELECT * FROM MEMBER;

SELECT mNO, mNAME, mRDATE, mEMAIL, mPOINT, LEVELNAME
    FROM MEMBER M, MEMBER_LEVEL L
    WHERE M.LEVELNO=L.LEVELNO;