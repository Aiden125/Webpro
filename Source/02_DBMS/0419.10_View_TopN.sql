-- [x] VIEW, INLINE VIEW, TOP-N구문
-- 1. VIEW : 가상의 테이블 (1) 단순뷰 (2)복합뷰
-- (1) 단순뷰 ; 하나의 테이블로 구성한 뷰
-- EMPv0이라는 VIEW생성 또는 수정 = EMP테이블 일부 필드를 갖는 가상의 테이블
SELECT * FROM USER_VIEWS; -- 데이터 딕셔너리 뷰 확인
CREATE OR REPLACE VIEW EMPV0
    AS SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, DEPTNO FROM EMP; -- DDL을 수행하면 데이터딕셔너리 자동 수정
SELECT * FROM USER_VIEWS;
SELECT * FROM EMPV0; -- 가상의 테이블

-- 뷰에 INSERT하면 EMP테이블에도 INSERT
INSERT INTO EMPV0 VALUES (1111,'홍','ITMANAGER',7369,SYSDATE,40); 
SELECT * FROM EMPV0;
SELECT * FROM EMP;

-- 뷰에서 업데이트하면 그걸 가지고 있는 원본 테이블도 업데이트 같이 됨
UPDATE EMPV0 SET JOB='MANAGER' WHERE EMPNO=1111;
SELECT * FROM EMPV0;
SELECT * FROM EMP;

-- 뷰 DELETE 하면 EMP테이블에서도 DELETE 됨
DELETE FROM EMPV0 WHERE EMPNO=1111;
SELECT * FROM EMPV0;
SELECT * FROM EMP;

-- EMPV0이라는 VIEW : EMP테이블의 30번 부서행만
CREATE OR REPLACE VIEW EMPV0
    AS SELECT * FROM EMP WHERE DEPTNO=30;
DESC EMPV0;
SELECT * FROM EMPV0;
INSERT INTO EMPV0 VALUES (1111,'KONGGOGI',NULL,NULL,SYSDATE,9000,900,30); -- 30번 부서 INSERT
SELECT * FROM EMPV0;
SELECT * FROM EMP;

-- 40번 부서 입력은 가능하지만 VIEW에서는 안보임(30번 부서만 보는걸로 했으니)
INSERT INTO EMPV0 VALUES(1112,'PARK',NULL,NULL,SYSDATE,8000,800,40);
SELECT * FROM EMPV0;
SELECT * FROM EMP;

-- EMPV0 에는 30번만 존재하기에 부서가 40번인 1112는 실질적인 삭제는 안됨
DELETE FROM EMPV0 WHERE EMPNO IN(1111,1112);
SELECT * FROM EMPV0;
SELECT * FROM EMP;

-- 40번 부서는 EMP에서 따로 삭제 필요
DELETE FROM EMP WHERE EMPNO=1112;
SELECT * FROM EMP;

-- EMPV0 뷰 생성 : ENAME, JOB, HIREDA만으로 뷰 만들기(NOT NULL 필드를 미포함하면 INSERT 불가)
CREATE OR REPLACE VIEW EMPV0
    AS SELECT ENAME, JOB, HIREDATE FROM EMP;
INSERT INTO EMPV0 VALUES('JAY','SALESMAN',SYSDATE);

SELECT * FROM EMPV0;
COMMIT;


-- VIEW의 제한 조건 (1) 뷰의 조건 (2) 읽기전용
-- WITH CHECK OPTION을 설정한 뷰는 뷰의 조건에 해당되는 데이터만 삽입, 수정, 삭제 가능
-- WITH READ ONLY를 설정한 뷰는 읽기 전용 뷰


-- EMPV0 : EMP테이블에서 30번 부서만 INNSERT, DELETE 등 가능하게 설정해서 만들기
CREATE OR REPLACE VIEW EMPV0
    AS SELECT * FROM EMP WHERE DEPTNO=30
    WITH CHECK OPTION;
INSERT INTO EMPV0 VALUES (1111,'JONG',NULL,NULL,SYSDATE,9000,90,30); -- 30번 부서만 INSERT
INSERT INTO EMPV0 VALUES (1112,'JONG',NULL,NULL,SYSDATE,9000,90,40); -- WHERE 조건에 만족하지 않으면 불가
SELECT * FROM EMP;
DELETE FROM EMPV0 WHERE ENAME='SMITH'; -- 20번 부서 SMITH 불가. (0행 삭제했다고 뜸)
DELETE FROM EMPV0 WHERE EMPNO=1111; -- 30번 부서 DELETE

-- EMPV0 : 읽기전용 뷰
CREATE OR REPLACE VIEW EMPV0
    AS SELECT EMPNO, ENAME, JOB, MGR, DEPTNO FROM EMP
    WITH READ ONLY;
INSERT INTO EMPV0 VALUES (1111,'JONG',NULL,NULL,SYSDATE,9000,90,30); -- 읽기전용이기에 에러남

-- (2) 복합뷰 : 2개 이상의 테이블로 구성한 뷰이거나 가상의 필드로 뷰를 만들 경우. DML문을 제한적으로 사용

-- ① 2개 이상의 테이블로 뷰 생성
CREATE OR REPLACE VIEW EMPV0
    AS SELECT EMPNO, ENAME, JOB, DNAME, LOC FROM EMP E, DEPT D WHERE E.DEPTNO=D.DEPTNO;
SELECT * FROM EMPV0;
INSERT INTO EMPV0 VALUES (1111,'HONG','MANAGER','RESEARCH','DALLAS'); -- 복합뷰는 갱신불가(INSERT,UPDATE,DELETE 등)

-- ② 가상의 필드로 뷰 : 컬럼에 별칭 이용하여 뷰 생성(영문자, 언더바, 숫자 등 활용)
CREATE OR REPLACE VIEW EMPV0
    AS SELECT EMPNO, ENAME, SAL*12 SALARY FROM EMP WHERE DEPTNO=10;
SELECT * FROM EMPV0;

CREATE OR REPLACE VIEW EMPV0 (EMPNO, ENAME, SALARY) --별칭을 따로 넣은 버전
    AS SELECT EMPNO, ENAME, SAL*12 SALARY FROM EMP WHERE DEPTNO=10;
SELECT * FROM EMPV0;
INSERT INTO EMPV0 VALUES(1111,'JANG',2400); -- 복합뷰는 갱신(DML) 불가능



-- EX. 부서번호, 최소급여, 최대급여, 부서평균급여를 포함한 DEPTV1뷰를 생성하시오
CREATE OR REPLACE VIEW DEPTV1
    AS SELECT DEPTNO, MIN(SAL) MINSAL, MAX(SAL) MAXSAL, ROUND(AVG(SAL)) AVGSAL FROM EMP GROUP BY DEPTNO;
SELECT * FROM DEPTV1;

-- EX. 직책, 부서를 포함한 EMPV0 뷰를 생성
CREATE OR REPLACE VIEW EMPV0
    AS SELECT DISTINCT JOB, DEPTNO FROM EMP; --중복값 제거를 위해 DISTINCT 넣기
SELECT * FROM EMPV0;
INSERT INTO EMPV0 VALUES('CLERK',10); --DISTINCT 포함한 뷰도 읽기전용이라 에러



-- 2. INLINE VIEW ; FROM절 상의 서브쿼리를 INLINE VIEW라고 하며, FROM절에 오는 서브쿼리는 VIEW처럼 작용
-- EX. 급여가 2000을 초과하는 사원의 평균 급여
SELECT AVG(SAL) FROM EMP WHERE SAL>2000;
SELECT AVG(SAL) FROM (SELECT SAL FROM EMP WHERE SAL>2000);


-- EX. 부서별로 월급이 평균 월급보다 높은 사원을 사번, 이름, 급여, 부서번호
SELECT EMPNO, ENAME, SAL
    FROM EMP E
    WHERE SAL > (SELECT AVG(SAL) FROM EMP WHERE DEPTNO=E.DEPTNO); -- 지난풀이

SELECT EMPNO, ENAME, SAL
    FROM EMP E, (SELECT DEPTNO, AVG(SAL) AVGSAL FROM EMP GROUP BY DEPTNO) A
    WHERE E.DEPTNO=A.DEPTNO AND SAL>AVGSAL; -- INLINE VIEW 활용



-- 3. TOP-N구문(TOP 1~10등 / TOP 11~20등)

-- ★ ROWNUM : FROM의 테이블로부터 가져온 순서
SELECT ROWNUM, ENAME FROM EMP WHERE DEPTNO=20;

-- 등수, 이름, SAL (전체행에 대해)
SELECT ROWNUM, ENAME, SAL FROM EMP ORDER BY SAL DESC; -- ROWNUM이 등수가 아님(단순히 테이블로부터 가져온 순서)
SELECT ROWNUM, ENAME, SAL FROM (SELECT * FROM EMP ORDER BY SAL DESC);

-- 함수를 이용한 RANK 출력(비추)
SELECT RANK() OVER(ORDER BY SAL DESC) RANK,
    DENSE_RANK() OVER(ORDER BY SAL DESC) DENSE_RANK,
    ROW_NUMBER() OVER(ORDER BY SAL DESC) ROW_NUMBER,
    ENAME, SAL FROM EMP;


-- SAL기준으로 1~5등
SELECT ROWNUM, ENAME, SAL
    FROM (SELECT ENAME, SAL FROM EMP ORDER BY SAL DESC)
    WHERE ROWNUM<=5;

-- SAL기준으로 6~10등(TOP-N이 아님)
SELECT ROWNUM, ENAME, SAL
    FROM (SELECT ENAME, SAL FROM EMP ORDER BY SAL DESC)
    WHERE ROWNUM BETWEEN 6 AND 10; -- 넘어가야 1로 되는데 1이 안생겨서 결과가 한 행도 안나옴


-- TOP-N 구문 1단계
SELECT ROWNUM RN, ENAME, SAL FROM (SELECT ENAME, SAL FROM EMP ORDER BY SAL DESC);
-- TOP-N 구문 2단계(완성된 TOP-N 구문)
SELECT ROWNUM, RN, ENAME, SAL
    FROM (SELECT ROWNUM RN, ENAME, SAL FROM (SELECT ENAME, SAL FROM EMP ORDER BY SAL DESC)) A
    WHERE RN BETWEEN 11 AND 15;


-- 이름을 알파벳 순서대로 정렬해서 6~10번째까지 출력(번호, 이름, 사번, JOB, MGR, HIREDATE)
SELECT ROWNUM RN, ENAME, EMPNO, JOB, MGR, HIREDATE FROM (SELECT * FROM EMP ORDER BY ENAME);
SELECT RN, ENAME, EMPNO, JOB, MGR, HIREDATE
    FROM (SELECT ROWNUM RN, ENAME, EMPNO, JOB, MGR, HIREDATE FROM (SELECT * FROM EMP ORDER BY ENAME))
    WHERE RN BETWEEN 6 AND 10;


SELECT ROWNUM RN, ENAME, EMPNO, JOB, MGR, HIREDATE
    FROM (SELECT ENAME, EMPNO, JOB, MGR, HIREDATE FROM EMP ORDER BY ENAME)
    WHERE RN BETWEEN 6 AND 10;



--<총 연습문제>
-- 1. 부서명과 사원명을 출력하는 용도의 뷰, DNAME_ENAME_VU 를 작성하시오
CREATE OR REPLACE VIEW DEV
    AS SELECT DNAME, ENAME FROM EMP E, DEPT D WHERE E.DEPTNO=D.DEPTNO;
SELECT * FROM DEV;

-- 2. 사원명과 직속상관명을 출력하는 용도의 뷰,  WORKER_MANAGER_VU를 작성하시오
CREATE OR REPLACE VIEW WMV
    AS SELECT A, B
    FROM (SELECT W.ENAME A, M.ENAME B FROM EMP W, EMP M WHERE W.MGR=M.EMPNO);
SELECT * FROM WMV;

-- 3. 부서별 급여합계 등수를 출력하시오(부서번호, 급여합계, 등수). -- 학생 질문
SELECT DE, SUMSAL, ROWNUM
    FROM (SELECT DEPTNO DE, SUM(SAL) SUMSAL
    FROM EMP GROUP BY DEPTNO ORDER BY SUM(SAL) DESC);

-- 3-1. ★★부서별 급여합계 등수가 2~3등인 부서번호, 급여합계, 등수를 출력하시오.
SELECT DE, SUMSAL, ROWNUM
    FROM (SELECT DE, SUMSAL, ROWNUM RN
    FROM (SELECT DEPTNO DE, SUM(SAL) SUMSAL FROM EMP GROUP BY DEPTNO ORDER BY SUM(SAL) DESC))
    WHERE RN BETWEEN 2 AND 3;
    
    
-- 4. 사원테이블에서 사번, 사원명, 입사일을 입사일이 최신에서 오래된 사원 순으로 정렬하시오
SELECT EMPNO, ENAME, HIREDATE FROM (SELECT * FROM EMP ORDER BY HIREDATE DESC);

-- 5. 사원테이블에서 사번, 사원명, 입사일을 입사일이 최신에서 오래된 사원 5명을 출력하시오
SELECT EMPNO, ENAME, HIREDATE
    FROM (SELECT EMPNO, ENAME, HIREDATE, ROWNUM RN FROM (SELECT * FROM EMP ORDER BY HIREDATE DESC))
    WHERE RN <=5;
    
-- 6. ★★사원 테이블에서 사번, 사원명, 입사일을 최신부터 오래된 순으로 6번째로 늦은 사원부터 10번째 사원까지 출력
SELECT EMPNO, ENAME, HIREDATE
    FROM (SELECT EMPNO, ENAME, HIREDATE, ROWNUM RN FROM (SELECT * FROM EMP ORDER BY HIREDATE DESC))
    WHERE RN BETWEEN 6 AND 10;