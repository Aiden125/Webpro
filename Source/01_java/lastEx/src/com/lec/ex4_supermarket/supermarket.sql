--
DROP TABLE CUSTOMER;
-- DROP TABLE CUSTOMER CASCADE CONSTRAINTS;(참조하는 경우가 있는 경우 강제삭제(절대 안쓰는편)
DROP TABLE CUS_LEVEL;
DROP SEQUENCE CUSTOMER_SQ;

CREATE TABLE CUS_LEVEL (
    LEVELNO NUMBER(2) PRIMARY KEY,
    LEVELNAME VARCHAR2(20),
    LOW NUMBER(10),
    HIGH NUMBER(10)
);

-- NORMAL 1 0 99999 / SILVER 2 100000 499999 / GOLD 3 500000 999999
-- / VIP 4 1000000 1999999 / VVIP 2000000 999999999

INSERT INTO CUS_LEVEL VALUES(1, 'NORMAL', 0, 99999);
INSERT INTO CUS_LEVEL VALUES(2, 'SILVER', 100000, 499999);
INSERT INTO CUS_LEVEL VALUES(3, 'GOLD', 500000, 999999);
INSERT INTO CUS_LEVEL VALUES(4, 'VIP', 1000000, 1999999);
INSERT INTO CUS_LEVEL VALUES(5, 'VVIP', 2000000, 999999999);

CREATE SEQUENCE CUSTOMER_SQ
MAXVALUE 999999
NOCACHE
NOCYCLE;

CREATE TABLE CUSTOMER (
    cID NUMBER(6) PRIMARY KEY,
    cTEL VARCHAR2(20) NOT NULL,
    cNAME VARCHAR2(30) NOT NULL,
    cPOINT NUMBER(10) DEFAULT 1000 CHECK(cPOINT>=0),
    cAMOUNT NUMBER(10) DEFAULT 0,
    LEVELNO NUMBER(2) DEFAULT 1 REFERENCES CUS_LEVEL(LEVELNO)
    -- 아래에 제약조건 쓰는 경우.
    -- PRIMARY KEY(cID)
    -- FOREIGN KEY(LEVELNO) REFERENCES CUS_LEVEL(LEVELNO)
);

INSERT INTO CUSTOMER(cID, cTEL, cNAME)
    VALUES(CUSTOMER_SQ.NEXTVAL, '010-6666-6666', '박명수');
INSERT INTO CUSTOMER(cID, cTEL, cNAME)
    VALUES(CUSTOMER_SQ.NEXTVAL, '010-3333-3333', '유재석');
INSERT INTO CUSTOMER(cID, cTEL, cNAME)
    VALUES(CUSTOMER_SQ.NEXTVAL, '010-5555-5555', '정형돈');
INSERT INTO CUSTOMER VALUES (CUSTOMER_SQ.NEXTVAL, '010-7777-7777','유재석',0,5000000,5);
INSERT INTO CUSTOMER VALUES (CUSTOMER_SQ.NEXTVAL, '010-5231-5231','정준하',0,150000,2);

SELECT * FROM CUS_LEVEL;
SELECT * FROM CUSTOMER;


-- 결과가 1명이상일 경우 ARRAYLIST에 담기
-- 아닌 경우 그냥 변수에 담아도 됨

-- 0. 레벨이름들 검색 : public Vector<String> getLevelNames()
SELECT LEVELNAME FROM CUS_LEVEL;

-- 1. cId로 검색
-- 고유키에 해당하기에 한 행만 오는경우로 적용(배열안씀)
-- CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, forlevelUP
-- public CustomerDto cIdGetCustomer(int cId)
SELECT cID, cTEL, cNAME, cPOINT, cAMOUNT, LEVELNAME,
        (SELECT HIGH-cAMOUNT+1 FROM CUSTOMER WHERE CID=C.CID AND LEVELNO!=5) forLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO=L.LEVELNO
    AND cid=4;
-- 위 구문에서 단순히 WHERE절에 LEVELNO조건을 넣으면 아예 출력 자체가 안되기 때문에 서브쿼리로 넣어줘야함
    
    
-- 2. 폰뒤4자리(FULL) 검색
-- 여러행이 올 수 있기에 어레이에 담음
-- public ArrayList<CustomerDto> cTelGetCustomers(String cTel);
-- CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, 레벨업을 위한 쓸 돈
SELECT cID, cTEL, cNAME, cPOINT, cAMOUNT, LEVELNAME,
    (SELECT HIGH-CAMOUNT+1 FROM CUSTOMER WHERE CID=C.CID AND LEVELNO!=5) forLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO=L.LEVELNO
    AND cTEL LIKE '%'||'6666'; -- 자바에서도 %를 남겨야하기 때문에 연결연산자로 연결 해놓음

-- 3. 고객이름검색
-- public ArrayList<CustomerDto> cNameGetCustomers(String cName);
-- CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, 레벨업을 위한 쓸 돈
SELECT cID, cTEL, cNAME, cPOINT, cAMOUNT, LEVELNAME,
    (SELECT HIGH-CAMOUNT+1 FROM CUSTOMER WHERE CID=C.CID AND LEVELNO!=5) forLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO=L.LEVELNO
    AND cNAME='유재석'
    ORDER BY cAMOUNT DESC;

-- 4. 포인트로만 구매(1000원짜리를 포인트로만 구매) : public int buyWithPoint(int cId, int cAmount)
UPDATE CUSTOMER SET cPOINT=cPOINT-1000 WHERE cID=1;

-- 5. 물품구매 (1000000원짜리를 구매할 경우. 포인트는 구매금액의 5%)
-- public int buy(int cId, int cAmount)
-- 물품구매 update에는 cPoint, cAmount, levelNo 수정

-- 5-1. cPOINT, cAMOUNT 변경
UPDATE CUSTOMER SET cPOINT=cPOINT+(1000000*0.05), cAMOUNT=cAMOUNT+1000000
    WHERE cID=1;
SELECT * FROM CUSTOMER;

-- 5-2. 변경할 LEVELNO 출력구문(변경하기 전 현레벨번호와 수정될레벨번호)
SELECT cID, cNAME, cAMOUNT, C.LEVELNO 현레벨, L.LEVELNO 수정될레벨
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE cAMOUNT BETWEEN LOW AND HIGH;

-- 5-3. LEVELNO 변경
UPDATE CUSTOMER SET LEVELNO = (
SELECT L.LEVELNO 수정될레벨
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE cAMOUNT BETWEEN LOW AND HIGH AND cID=1) -- cID를 안에도 넣는 이유는 단일행 함수로 만들어주기 위해서 넣는 것
    WHERE cID=1;
    
SELECT * FROM CUSTOMER;

-- 5-1과 5-3을 합치기 CPOINT, CAMOUNT, LEVELNO를 한꺼번에 수정하기
-- cID를 안에도 넣는 이유는 단일행 함수로 만들어주기 위해서 넣는 것
UPDATE CUSTOMER SET cPOINT=cPOINT+(1000000*0.05),
                    cAMOUNT=cAMOUNT+1000000,
                    LEVELNO = ( SELECT L.LEVELNO 수정될레벨
                                FROM CUSTOMER C, CUS_LEVEL L
                                WHERE cAMOUNT+1000000 BETWEEN LOW AND HIGH AND cID=1)
    WHERE cID=1;
SELECT * FROM CUSTOMER;


-- 6. 등급별출력
-- public ArrayList<CustomerDto> levelNameGetCustomers(String levelName)
-- CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, 레벨업을 위한 쓸 돈
SELECT cID, cTEL, cNAME, cPOINT, cAMOUNT, LEVELNAME,
    (SELECT HIGH-CAMOUNT+1 FROM CUSTOMER WHERE CID=C.CID AND LEVELNO!=5) forLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO=L.LEVELNO
    AND LEVELNAME='NORMAL';

-- 7.전체출력
-- CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, 레벨업을 위한 쓸 돈
-- public ArrayList<CustomerDto> getCustomers()
SELECT cID, cTEL, cNAME, cPOINT, cAMOUNT, LEVELNAME,
    (SELECT HIGH-CAMOUNT+1 FROM CUSTOMER WHERE CID=C.CID AND LEVELNO!=5) forLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO=L.LEVELNO;
    
-- 8. 회원가입(cTEL, cNAME 입력받아 INSERT)
-- public int insertCustomer(String cTel, String cName)
-- int insertCustomer(CustomerDto dto) 이렇게 Dto쪽으로 넘겨도 ok 매개변수 많은 경우 이렇게 넘기는 경우 꽤 있음
INSERT INTO CUSTOMER (cID, cTEL, cNAME)
    VALUES (CUSTOMER_SQ.NEXTVAL, '010-4455-5544', '하하');
SELECT * FROM CUSTOMER;

-- 9. 번호수정 : public int updateCustomer(int cId, String cTel)
UPDATE CUSTOMER SET cTEL='010-3333-1111' WHERE cID=1;

-- 10. 회원탈퇴 : public int deleteCustomer(String cTel)
DELETE FROM CUSTOMER WHERE cTEL='010-6666-6666';
COMMIT;
ROLLBACK;


