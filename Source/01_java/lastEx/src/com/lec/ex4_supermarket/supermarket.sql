--
DROP TABLE CUSTOMER;
DROP TABLE CUS_LEVEL;
DROP SEQUENCE CUSTOMER_SQ;

CREATE TABLE CUS_LEVEL (
    LEVELNO NUMBER(2) PRIMARY KEY,
    LEVELNAME VARCHAR2(20),
    LOW NUMBER(10),
    HIGH NUMBER(10)
);

-- NORMAL 1 0 99999 / SILVER 2 100000 499999 / GOLD 3 500000 999999
-- / VIP 4 1000000 1999999 / VVIP 2000000 999999999

INSERT INTO CUS_LEVEL VALUES(1, 'NORMAL', 0, 99999);
INSERT INTO CUS_LEVEL VALUES(2, 'SILVER', 100000, 499999);
INSERT INTO CUS_LEVEL VALUES(3, 'GOLD', 500000, 999999);
INSERT INTO CUS_LEVEL VALUES(4, 'VIP', 1000000, 1999999);
INSERT INTO CUS_LEVEL VALUES(5, 'VVIP', 2000000, 999999999);

CREATE SEQUENCE CUSTOMER_SQ
MAXVALUE 999999
NOCACHE
NOCYCLE;

CREATE TABLE CUSTOMER (
    cID NUMBER(6) PRIMARY KEY,
    cTEL VARCHAR2(20) NOT NULL,
    cNAME VARCHAR2(30) NOT NULL,
    cPOINT NUMBER(10) DEFAULT 1000,
    cAMOUNT NUMBER(10) DEFAULT 0,
    LEVELNO NUMBER(2) DEFAULT 1 REFERENCES CUS_LEVEL(LEVELNO)
);

INSERT INTO CUSTOMER(cID, cTEL, cNAME)
    VALUES(CUSTOMER_SQ.NEXTVAL, '010-6666-6666', '박명수');
INSERT INTO CUSTOMER(cID, cTEL, cNAME)
    VALUES(CUSTOMER_SQ.NEXTVAL, '010-3333-3333', '유재석');
INSERT INTO CUSTOMER(cID, cTEL, cNAME)
    VALUES(CUSTOMER_SQ.NEXTVAL, '010-5555-5555', '정형돈');

SELECT * FROM CUS_LEVEL;
SELECT * FROM CUSTOMER;


-- 0. 레벨이름들 검색 : public Vector<String> getLevelNames()
SELECT LEVELNAME FROM CUS_LEVEL;

-- 1. cId로 검색 : public CustomerDto cIdGetCustomer(int cId)
SELECT cID, cTEL, cNAME, cPOINT, cAMOUNT, LEVELNAME,
        (SELECT HIGH-CAMOUNT+1 FROM CUSTOMER WHERE CID=C.CID AND LEVELNO!=5) forLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO=L.LEVELNO
    AND cid=1;
    
-- 2. 폰뒤4자리(FULL) 검색 - CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, 레벨업을 위한 쓸 돈
-- public ArrayList<CustomerDto> cTelGetCustomers(String cTel);
SELECT cTEL, cNAME, cPOINT, cAMOUNT, LEVELNAME,
    (SELECT HIGH-CAMOUNT+1 FROM CUSTOMER WHERE CID=C.CID AND LEVELNO!=5) forLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO=L.LEVELNO
    AND cTEL LIKE '%6666';

-- 3. 고객이름검색 - CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, 레벨업을 위한 쓸 돈
-- public ArrayList<CustomerDto> cNameGetCustomers(String cName);
SELECT cTEL, cNAME, cPOINT, cAMOUNT, LEVELNAME,
    (SELECT HIGH-CAMOUNT+1 FROM CUSTOMER WHERE CID=C.CID AND LEVELNO!=5) forLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO=L.LEVELNO
    AND cNAME='박명수';

-- 4. 포인트로만 구매(1000원짜리를 포인트로만 구매) : public int buyWithPoint(int cAmount, int cId)
UPDATE CUSTOMER SET cPOINT=cPOINT-1000 WHERE cID=1;

-- 5. 물품구매 (1000000원짜리를 구매할 경우. 포인트는 구매금액의 5%)
-- 물품구매시 UPDATE 2회 필요(구매누적금액 UPDATE와 LEVELNO UPDATE)
-- public int buy(int cAmount, int cId)



-- 6. 등급별출력 - CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, 레벨업을위한쓸돈
-- public ArrayList<CustomerDto> levelNameGetCustomers(String levelName)
SELECT cID, cTEL, cNAME, cPOINT, cAMOUNT, LEVELNAME,
    (SELECT HIGH-CAMOUNT+1 FROM CUSTOMER WHERE CID=C.CID AND LEVELNO!=5) forLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO=L.LEVELNO
    AND LEVELNAME='NORMAL';

-- 7.전체출력 - CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, 레벨업을위한쓸돈
-- public ArrayList<CustomerDto> getCustomers()
SELECT cID, cTEL, cNAME, cPOINT, cAMOUNT, LEVELNAME,
    (SELECT HIGH-CAMOUNT+1 FROM CUSTOMER WHERE CID=C.CID AND LEVELNO!=5) forLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO=L.LEVELNO;
    
-- 8. 회원가입(고객전화와 고객이름은 입력받아 INSERT)
-- public int insertCustomer(String cTel, String cName)


-- 9. 번호수정 : public int updateCustomer(String cTel, int cId)
UPDATE CUSTOMER SET cTEL='010-3333-1111' WHERE cID=1;

-- 10. 회원탈퇴 : public int deleteCustomer(String cTel)
DELETE FROM CUSTOMER WHERE cTEL='010-6666-6666';
COMMIT;
ROLLBACK;


